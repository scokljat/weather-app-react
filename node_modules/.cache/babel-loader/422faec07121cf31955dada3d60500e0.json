{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\" \");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = -useState(\"\");\n\n  const getWeather = (city, country) => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=ef46c698d33f0f033288cfad7a301616`).then(response => response.json()).then(data => {\n      console.log(data);\n      setTemperature((data.main.temp - 273.15).toFixed(2));\n    });\n  };\n\n  const changeHandlerCity = e => {\n    setCity(e.target.value);\n  };\n\n  const changeHandlerCountry = e => {\n    setCountry(e.target.value);\n  };\n\n  console.log(country);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: changeHandlerCity,\n      placeholder: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: country,\n      onChange: changeHandlerCountry,\n      placeholder: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getWeather(city, country);\n      },\n      children: \"GET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature\",\n      children: [temperature, \" \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7Yv06LdvX135o2RDTzRGvE6lh7g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HOME/weather-app/src/App.js"],"names":["useState","App","temperature","setTemperature","description","setDescription","city","setCity","country","setCountry","getWeather","fetch","then","response","json","data","console","log","main","temp","toFixed","changeHandlerCity","e","target","value","changeHandlerCountry"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwB,CAACT,QAAQ,CAAC,EAAD,CAAvC;;AACA,QAAMU,UAAU,GAAG,CAACJ,IAAD,EAAOE,OAAP,KAAmB;AACpCG,IAAAA,KAAK,CACF,oDAAmDL,IAAK,IAAGE,OAAQ,yCADjE,CAAL,CAGGI,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAZ,MAAAA,cAAc,CAAC,CAACY,IAAI,CAACG,IAAL,CAAUC,IAAV,GAAiB,MAAlB,EAA0BC,OAA1B,CAAkC,CAAlC,CAAD,CAAd;AACD,KAPH;AAQD,GATD;;AAUA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/Bf,IAAAA,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,CAAD,IAAO;AAClCb,IAAAA,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIAR,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEF,IAFT;AAGE,MAAA,QAAQ,EAAEe,iBAHZ;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEb,OAFT;AAGE,MAAA,QAAQ,EAAEiB,oBAHZ;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AACE,MAAA,OAAO,EAAE,MAAM;AACbf,QAAAA,UAAU,CAACJ,IAAD,EAAOE,OAAP,CAAV;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAoBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACGN,WADH,OACiBE,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAlDQH,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./app.css\";\n\nfunction App() {\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\" \");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = -useState(\"\");\n  const getWeather = (city, country) => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=ef46c698d33f0f033288cfad7a301616`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setTemperature((data.main.temp - 273.15).toFixed(2));\n      });\n  };\n  const changeHandlerCity = (e) => {\n    setCity(e.target.value);\n  };\n\n  const changeHandlerCountry = (e) => {\n    setCountry(e.target.value);\n  };\n\n  console.log(country);\n  return (\n    <div className=\"container\">\n      <input\n        type=\"text\"\n        value={city}\n        onChange={changeHandlerCity}\n        placeholder=\"City\"\n      />\n      <input\n        type=\"text\"\n        value={country}\n        onChange={changeHandlerCountry}\n        placeholder=\"Country\"\n      />\n      <button\n        onClick={() => {\n          getWeather(city, country);\n        }}\n      >\n        GET\n      </button>\n      <div className=\"temperature\">\n        {temperature} {description}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}